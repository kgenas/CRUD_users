{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/Learn React/Undemy React/proyect/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport { EditUserForm } from './forms/EditUserForm';\nimport { UserTable } from './tables/UserTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const userData = [{\n    id: 1,\n    name: 'Tania',\n    username: 'floppydiskette'\n  }, {\n    id: 2,\n    name: 'Craig',\n    username: 'siliconeidolon'\n  }, {\n    id: 3,\n    name: 'Ben',\n    username: 'benisphere'\n  }];\n  const initialFormState = {\n    id: null,\n    name: '',\n    username: ''\n  };\n  const [users, setUsers] = useState(userData);\n  const [currentUser, setCurrentUser] = useState(initialFormState);\n  const [editing, setEditing] = useState(false);\n\n  const deleteUser = id => {\n    setEditing(false);\n    setUsers(users.filter(user => user.id !== id));\n  };\n\n  const updateUser = (id, updateUser) => {\n    setEditing(false); // si el igual al id guarda el nuevo cambio si no carge la lista existente\n\n    setUsers(users.map(user => user.id === id ? updateUser : user));\n  };\n\n  const editRow = user => {\n    setEditing(true);\n    setCurrentUser({\n      id: user.id,\n      name: user.name,\n      username: user.username\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRUD App \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-large\",\n        children: editing ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit user \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(EditUserForm, {\n            editing: editing,\n            setEditing: setEditing,\n            currentUser: currentUser,\n            updateUser: updateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-large\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"View users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n          users: users,\n          editRow: editRow,\n          deleteUser: deleteUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Zphtt422hNDtVq2qj7pskOITV6M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pedro/Documents/Learn React/Undemy React/proyect/my-app/src/App.js"],"names":["Fragment","useState","EditUserForm","UserTable","App","userData","id","name","username","initialFormState","users","setUsers","currentUser","setCurrentUser","editing","setEditing","deleteUser","filter","user","updateUser","map","editRow"],"mappings":"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","sourcesContent":["import { Fragment, useState} from 'react';\nimport { EditUserForm } from './forms/EditUserForm';\nimport { UserTable } from './tables/UserTable';\nfunction App() {\n\n  const userData = [\n    { id: 1, name: 'Tania', username:'floppydiskette' },\n    { id: 2, name: 'Craig', username:'siliconeidolon' },\n    { id: 3, name: 'Ben', username: 'benisphere'},\n  ];\n  const initialFormState = { id: null, name: '', username:''};\n  const [ users, setUsers ] = useState(userData);\n  const [ currentUser, setCurrentUser ] = useState(initialFormState);\n  const [ editing, setEditing ] = useState(false);\n  \n  const deleteUser =(id)=>{\n      setEditing(false);\n      setUsers(users.filter(user => user.id !== id))\n  }\n\n  const updateUser = (id, updateUser ) =>{\n    setEditing(false);\n    // si el igual al id guarda el nuevo cambio si no carge la lista existente\n    setUsers( users.map(user => (user.id ===id ? updateUser : user )));\n  }\n\n  const editRow = ( user ) =>{\n     setEditing(true);\n     setCurrentUser({id: user.id, name: user.name , username: user.username});\n  }\n  return (\n    <div className=\"container\">      \n      <h1>CRUD App </h1> \n      <div className='flex-row'>\n          <div className='flex-large'>\n             {editing ? ( \n                <Fragment>\n                  <h2>Edit user </h2>\n                  <EditUserForm\n                    editing = { editing }\n                    setEditing = { setEditing }\n                    currentUser = { currentUser }\n                    updateUser = { updateUser }\n                  />\n                </Fragment>\n              ) : (\n                <Fragment>\n                  \n                </Fragment>\n              )\n            }\n          </div>\n          <div className='flex-large'>\n              <h2>View users</h2>\n              <UserTable\n                users = { users }    \n                editRow = { editRow }\n                deleteUser = { deleteUser }\n              />\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}